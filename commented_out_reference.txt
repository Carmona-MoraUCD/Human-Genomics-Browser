Gene Page:

{/*<div class="col" id="table_content">
    <MaterialTable columns={columns}
    
      data={patient_table_data}
      icons={tableIcons}
      options={{
        pageSize: 5,
        pageSizeOptions: [5, 10, 15, 25, 50, 100],
        showTitle: false,
        search: false
      }}
      />
    </div>*/}

{/*<div class="col" id="checkbox_filter">

<div class="card shadow mb-4" >
      <div class="card-header py-3">
          <h6 class="m-0">Options</h6>
      </div>
      <div class="card-body">
        {options.map((options_category_list,j) => {

            return(
              <div>
                <h6 class="font-weight-bold">{options_category_list['title']}</h6>
                {options_category_list['cont_arr'].map((option, i) => {
                return (
                
                    <div className="flex items-center">
                      <input
                        type="checkbox"
                        className="focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded"
                        id={option}
                        name={option}
                        value={option}
                        onChange={(e) => {
                          //setFilter(setFilteredParams(filterValue, e.target.value));
                        }}
                      ></input>
                      <label
                        htmlFor={option}
                        className="ml-1.5 font-medium text-gray-700"
                      >
                        {option}
                      </label>
                    </div>
                
                );
              })}
              </div>
            );
        })}
      </div>
  </div>

</div>*/}

NumberFilter:
/*
   const propTypes = {
      column: PropTypes.object.isRequired,
      onFilter: PropTypes.func.isRequired
    }
*/

/*
const propTypes = {
    column: PropTypes.object.isRequired,
    onFilter: PropTypes.func.isRequired,
    optionsInput: PropTypes.object.isRequired
  }
*/

/*
const tableIcons = {
  Add: AddBox,
  Check: Check,
  Clear: Clear,
  Delete: DeleteOutline,
  DetailPanel: ChevronRight,
  Edit: Edit,
  Export: SaveAlt,
  Filter: FilterList,
  FirstPage: FirstPage,
  LastPage: LastPage,
  NextPage: ChevronRight,
  PreviousPage: ChevronLeft,
  ResetSearch: Clear,
  Search: Search,
  SortArrow: ArrowUpward,
  ThirdStateCheck: Remove,
  ViewColumn: ViewColumn
};
*/

/*
import AddBox from '@material-ui/icons/AddBox';
import ArrowUpward from '@material-ui/icons/ArrowUpward';
import Check from '@material-ui/icons/Check';
import ChevronLeft from '@material-ui/icons/ChevronLeft';
import ChevronRight from '@material-ui/icons/ChevronRight';
import Clear from '@material-ui/icons/Clear';
import DeleteOutline from '@material-ui/icons/DeleteOutline';
import Edit from '@material-ui/icons/Edit';
import FilterList from '@material-ui/icons/FilterList';
import FirstPage from '@material-ui/icons/FirstPage';
import LastPage from '@material-ui/icons/LastPage';
import Remove from '@material-ui/icons/Remove';
import SaveAlt from '@material-ui/icons/SaveAlt';
import Search from '@material-ui/icons/Search';
import ViewColumn from '@material-ui/icons/ViewColumn';
*/

/*
const handleUserSubmit = async () => {

    const email = user.email
    const first_name = userMetadata.given_name
    const last_name = userMetadata.family_name
    const auth0_uid = user.sub

    const formData = new FormData();
    formData.append("email", email);
    formData.append("first_name", first_name);
    formData.append("last_name", last_name);
    formData.append("auth0_uid", auth0_uid);

    axios
      .post(user_post_url, formData)
      .then(() => {
        console.log("Account information successfully submitted on backend.");
      })
      .catch((error) => {
        if (error.response.status === 409) {
          console.log("Account informaiton already registered in DB. No update needed.")
        }
      });
  };
*/

/*
<input
    key="input"
    type="text"
    placeholder="text"
    data-cy="genelistinputbox"
    onChange={(e) => { setInputStr( e.target.value ) }}
  />
  <button
    id="gene_list_search"
    onClick={() => {filter()}}
  >Search</button>
  <button
    id="gene_list_reset"
    onClick={() => {reset_list()}}
  >Reset</button>
*/

/*
<div class="card shadow" >
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Basic Dataset Information</h6>
    </div>
    <div class="card-body">
    {datasetTableInputFormat.length>3 ? (
      <div>
        {
          <MaterialTable columns={columns} 
          data={datasetTableInputFormat}
          icons={tableIcons}
          options={{
            paging: false,
            showTitle: false
          }}
          />
        }
      </div>
      ):(
        <div>
          <CircularProgress />
        </div>
      )
    }
    </div>
  </div>
*/
